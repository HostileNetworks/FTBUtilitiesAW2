import org.apache.tools.ant.filters.ReplaceTokens

ext.versionFile = file('gradle.properties')

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}
version = project.major +"."+ project.minor +"."+  project.build+"-"+ project.releasetype + "-MC" +minecraft.version
group= "ftb.utils" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "FTBU_AW2"

sourceCompatibility = 1.7
targetCompatibility = 1.7

task updateVersion(type:Copy){
    ant.propertyfile(file: versionFile) {
        entry(key: 'build', type: 'int', operation: '+', value: 001)
    }
    from(sourceSets.main.java.srcDirs){
        exclude 'mcmod.info'
    }
    into 'build/sources/java'
    filter(ReplaceTokens, tokens: [VERSION: project.version])
}

compileJava.dependsOn updateVersion


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
